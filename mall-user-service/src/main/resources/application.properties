#服务端口
server.port=8070
#jdbc
spring.datasource.username=root
spring.datasource.password=bookjiang
spring.datasource.url=jdbc:mysql://localhost:3306/mall?serverTimezone=UTC
#mybatis配置
###mapper.xml文件中resultMap的type或者parameterType会使用自定义的pojo，
mybatis.type-aliases-package=com.zhiqiang.mall.bean
mybatis.mapper-locations=classpath:mapper/*Mapper.xml
# 驼峰命名规范 如：数据库字段是  order_id 那么 实体字段就要写成 orderId
mybatis.configuration.map-underscore-to-camel-case=true

#对通用mapper进行配置
# 主键自增回写方法,默认值MYSQL,详细说明请看文档
mapper.mappers=tk.mybatis.mapper.common.Mapper
mapper.identity=MYSQL
# 设置 insert 和 update 中，是否判断字符串类型!=''
mapper.not-empty=true
# 枚举按简单类型处理，如果有枚举字段则需要加上该配置才会做映射
mapper.enum-as-simple-type=true

######### 分页插件 ##########
pagehelper.helper-dialect=mysql
pagehelper.params=count=countSql
#分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页， pageNum>pages（超过总数时），会查询最后一页。默认false 时，直接根据参数进行查询
pagehelper.reasonable=true
#支持通过 Mapper 接口参数来传递分页参数，默认值false，分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页
pagehelper.support-methods-arguments=true

# dubbo的配置
# dubbo中的服务名称
spring.dubbo.application=user-service
# dubbo的通讯协议名称
spring.dubbo.protocol.name=dubbo
# zookeeper注册中心的地址
spring.dubbo.registry.address=192.168.43.128:2181
# zookeeper的通讯协议的名称
spring.dubbo.registry.protocol=zookeeper
# dubbo的服务的扫描路径
spring.dubbo.base-package=com.zhiqiang.mall


#springboot security的登录账号和密码
security.user.name=root
security.user.password=root


#dubbo的consumer在三秒钟之内每间隔一秒进行一次重新访问，默认一秒钟超时，三次访问之后会直接抛超时异常，所以我们在开发阶段，可以将consumer设置的超时时间延长，方便断点调试

# 设置超时时间
#spring.dubbo.consumer.timeout=600000
# 设置是否检查服务存在
#spring.dubbo.consumer.check=false

#redis配置
spring.redis.host=192.168.43.128
spring.redis.port=6379
spring.redis.database=0



#jwt配置
#JWT存储的请求头
jwt.tokenHeader= Authorization 
#JWT加解密使用的密钥
jwt.secret= mall-admin-secret 
#JWT的超期限时间(60*60*24*7)
jwt.expiration= 604800 
#JWT负载中拿到开头
jwt.tokenHead= Bearer  