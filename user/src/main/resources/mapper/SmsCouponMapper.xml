<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhiqiang.mall.user.mapper.SmsCouponMapper">
  <resultMap id="BaseResultMap" type="com.zhiqiang.mall.bean.SmsCoupon">
    <!--
      WARNING - @mbg.generated
    -->
    <constructor>
      <idArg column="coupon_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="type" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="platform" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="count" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="per_limit" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="min_point" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="start_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="end_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="use_type" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="note" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="publish_count" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="use_count" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="receive_count" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="enable_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="code" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="member_level" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    coupon_id, type, name, platform, count, amount, per_limit, min_point, start_time, 
    end_time, use_type, note, publish_count, use_count, receive_count, enable_time, code, 
    member_level
  </sql>
  <select id="selectByExample" parameterType="com.zhiqiang.mall.bean.SmsCouponExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sms_coupon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.zhiqiang.mall.bean.SmsCouponExample">
    <!--
      WARNING - @mbg.generated
    -->
    delete from sms_coupon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.zhiqiang.mall.bean.SmsCouponExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from sms_coupon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update sms_coupon
    <set>
      <if test="record.couponId != null">
        coupon_id = #{record.couponId,jdbcType=BIGINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.platform != null">
        platform = #{record.platform,jdbcType=INTEGER},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.perLimit != null">
        per_limit = #{record.perLimit,jdbcType=INTEGER},
      </if>
      <if test="record.minPoint != null">
        min_point = #{record.minPoint,jdbcType=DECIMAL},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.useType != null">
        use_type = #{record.useType,jdbcType=INTEGER},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.publishCount != null">
        publish_count = #{record.publishCount,jdbcType=INTEGER},
      </if>
      <if test="record.useCount != null">
        use_count = #{record.useCount,jdbcType=INTEGER},
      </if>
      <if test="record.receiveCount != null">
        receive_count = #{record.receiveCount,jdbcType=INTEGER},
      </if>
      <if test="record.enableTime != null">
        enable_time = #{record.enableTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.memberLevel != null">
        member_level = #{record.memberLevel,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update sms_coupon
    set coupon_id = #{record.couponId,jdbcType=BIGINT},
      type = #{record.type,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      platform = #{record.platform,jdbcType=INTEGER},
      count = #{record.count,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=DECIMAL},
      per_limit = #{record.perLimit,jdbcType=INTEGER},
      min_point = #{record.minPoint,jdbcType=DECIMAL},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      use_type = #{record.useType,jdbcType=INTEGER},
      note = #{record.note,jdbcType=VARCHAR},
      publish_count = #{record.publishCount,jdbcType=INTEGER},
      use_count = #{record.useCount,jdbcType=INTEGER},
      receive_count = #{record.receiveCount,jdbcType=INTEGER},
      enable_time = #{record.enableTime,jdbcType=TIMESTAMP},
      code = #{record.code,jdbcType=VARCHAR},
      member_level = #{record.memberLevel,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>